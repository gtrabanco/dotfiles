#!/usr/bin/env bash

set -euo pipefail

[[ -z "${DOTLY_PATH:-$SLOTH_PATH}" ]] && exit 1

#shellcheck disable=SC1091
. "${DOTLY_PATH:-$SLOTH_PATH}/scripts/core/src/_main.sh"
dot::load_library "sec.sh"

##? Generate a new GPG Key with GNUPG or Keybase
##?
##?
##? Usage:
##?   generate [-h | --help]
##?   generate [-v | --version]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
docs::parse "$@"

SCRIPT_NAME="dot gpg generate"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

script::depends_on gnupg

sec::sed -i '/^no-tty$/d' "$HOME/.gnupg/gpg.conf"

option="GPG"
if platform::command_exists keybase; then
  output::write "Choose if you want to generate in Keybase or with GNUPG"
  option="$(sec::menu "Keybase" "GPG")"
fi

if [[ "$option" == "Keybase" ]]; then
  keybase gpg gen
else
  sec::generate_key
fi
