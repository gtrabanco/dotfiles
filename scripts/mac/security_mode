#!/usr/bin/env bash

set -euo pipefail

[[ -z "$DOTLY_PATH" ]] && exit 1

#shellcheck source=/dev/null
. "$DOTLY_PATH/scripts/core/_main.sh"

# Default is not apple default always, can be MY DEFAULT which is a more
# relaxed than strict

security::pmset_defaults() {
  sudo pmset restoredefaults
}

security::file_vault_default() {
  # All
  sudo pmset -a destroyfvkeyonstandby 0

  # Battery
  sudo pmset -b hibernatemode 3
  sudo pmset -b powernap 0
  sudo pmset -b standby 1
  sudo pmset -b standbydelaylow 10800
  sudo pmset -b standbydelayhigh 86400
  sudo pmset -b autopoweroff 1

  # AC
  sudo pmset -c hibernatemode 3
  sudo pmset -c powernap 1
  sudo pmset -c standby 1
  sudo pmset -b standbydelaylow 10800
  sudo pmset -b standbydelayhigh 86400
  sudo pmset -b autopoweroff 1
}

security::file_vault_strict() {
  sudo pmset -a destroyfvkeyonstandby 1
  sudo pmset -a hibernatemode 25 # default: 3
  sudo pmset -a powernap 0
  sudo pmset -a standby 0
  sudo pmset -a standbydelay 0
  sudo pmset -a autopoweroff 0
}

security::firewall_default() {
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingmode on
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setblockall off
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingopt throttled
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsigned on
  sudo pkill -HUP socketfilterfw
}

security::firewall_strict() {
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingmode on
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setblockall on
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingopt detail
  sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsigned off
  sudo pkill -HUP socketfilterfw
}

security::captive_disable() {
  sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.captive.control.plist Active -bool FALSE
}

security::captive_enable() {
  sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.captive.control.plist Active -bool TRUE
}

security::screen_passwd_ask() {
  defaults write com.apple.screensaver askForPassword -int 1
}

security::screen_passwd_noask() {
  defaults write com.apple.screensaver askForPassword -int 0
}

security::bonjour_enable() {
  sudo defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool YES
}

security::bonjour_disable() {
  sudo defaults write /Library/Preferences/com.apple.mDNSResponder.plist NoMulticastAdvertisements -bool NO
}

##? Change mac security settings
##?
##? See:
##?    https://github.com/drduh/macOS-Security-and-Privacy-Guide
##?
##? Usage:
##?   security_mode [-h | --help]
##?   security_mode [-v | --version]
##?   security_mode block-on
##?   security_mode block-off
##?   security_mode block-status
##?   security_mode ip-block <ip_addr>
##?   security_mode ip-unblock <ip_addr>
##?   security_mode show-block
##?   security_mode [<security_mode>]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
docs::parse "$@"

SCRIPT_NAME="dot mac security_mode"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

output::error "This script has a pending task with https://github.com/hephaest0s/usbkill"
output::empty_line
output::answer "We need \`sudo\`"
echo -n " > "
sudo -v
output::empty_line

case "${1:-}" in
  block-on)
    sudo pfctl -e -f pf.rules &> /dev/null || true
    exit 0
    ;;
  block-off)
    sudo pfctl -d &> /dev/null || true
    exit 0
    ;;
  ip-block)
    [[ -z "${ip_addr:-}" ]] && exit 1
    sudo pfctl -e -f pf.rules &> /dev/null || true
    sudo pfctl -t blocklist -T add "$ip_addr"
    exit 0
    ;;
  ip-unblock)
    [[ -z "${ip_addr:-}" ]] && exit 1
    sudo pfctl -e -f pf.rules &> /dev/null || true
    sudo pfctl -t blocklist -T delete "$ip_addr"
    exit 0
    ;;
  show-block)
    [[ -z "${ip_addr:-}" ]] && exit 1
    sudo pfctl -t blocklist -T show
    exit 0
    ;;
esac

security_modes=(
  "home"
  "travel | strict (default)"
  "website (view security recommendations)"
  "captive_on"
  "captive_off"
  "gatekeeper_on"
  "gatekeeper_off"
)

if [[ -z "${security_mode:-}" ]]; then
  security_mode="$(printf "%s\n" "${security_modes[@]}" | fzf)"
fi

[[ -z "$security_mode" ]] &&
  ! output::yesno "Sure you want to set a default strict mode" &&
  output::error "User aborted" &&
  exit 1

case "${security_mode:-strict}" in
  home)
    output::answer "Configure File vault"
    security::file_vault_default &> /dev/null || true

    output::answer "Configure Firewall"
    security::firewall_default &> /dev/null || true

    output::answer "Disable Screen Saver to ask password"
    security::screen_passwd_noask &> /dev/null || true

    output::answer "Enabling bonjour"
    security::bonjour_enable &> /dev/null || true
    ;;
  website*)
    open "https://github.com/drduh/macOS-Security-and-Privacy-Guide"
    ;;
  captive_on)
    output::answer "Enable captive portal"
    security::captive_enable &> /dev/null || true
    ;;
  captive_off)
    output::answer "Disable captive portal"
    security::captive_disable &> /dev/null || true
    ;;
  gatekeeper_on)
    output::answer "Gatekeeper"
    {
      sudo sysctl --master-enable && output::solution "Gatekeeper Enabled"
    } || output::answer "Gatekeeper could not be enabled"
    ;;
  gatekeeper_off)
    output::answer "Gatekeeper"
    {
      sudo sysctl --master-disable && output::error "Gatekeeper Disabled"
    } || output::answer "Gatekeeper could not be disabled"
    ;;
  *)
    output::answer "Configure File vault"
    security::file_vault_strict &> /dev/null || true

    output::answer "Configure Firewall"
    security::firewall_strict &> /dev/null || true

    output::answer "Configure screen saver to ask password"
    security::screen_passwd_ask &> /dev/null || true

    output::answer "Disable bonjour"
    security::bonjour_disable &> /dev/null || true
    ;;
esac
