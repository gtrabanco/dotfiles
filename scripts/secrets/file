#!/usr/bin/env bash

[[ -z "$DOTLY_PATH" ]] && exit 1

. "$DOTLY_PATH/scripts/core/_main.sh"
. "$DOTLY_PATH/scripts/secrets/lib/secrets_files_helpers.sh"

##? Handle stored secrets
##? 
##?
##? Usage:
##?   file [-h | --help]
##?   file [-v | --version]
##?   file delete [-n | --no-sync] [-y | --yes] [<secret_path>]
##?   file restore [-n | --no-sync] [-y | --yes] [<secret_alias>]
##?   file edit [-n | --no-sync] [-y | --yes] [--by-alias]
##?   file view_aliases
##?   file view_stored_files
##?   file [-p | --prompt] [-y | --yes] <item_path> [<secrets_subfolder>]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?   -p --prompt   Ask subfolder path to store the file
##?   -n --no-sync  Do not sync changes. This option ignore --yes because
##?                 sync command won't be executed.
##?   -y --yes      No prompt about if you are sure you want to sync your
##?                 secrets repository.
##?   --by-alias    Edit file alias by alias instead of by know stores
##?                 path in secrets repository.
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
docs::parse "$@"

SCRIPT_NAME="dot secrets file"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

case $1 in
"view_aliases")
  secrets::get_all_aliases | secrets::fzf "View secret aliases"
  exit
  ;;
"view_files")
  secrets::find --exclude files | secrets::fzf "View secet stored files"
  exit
  ;;
"delete")
  # Provided file
  if [[ -n "${secret_path:-}" ]]; then
    file_secret_path="$(secrets::check_exists "files/$secret_path")"
    if [[ -z $file_secret_path ]]; then
      output::error "ðŸ—ƒ Eror 404: File not found"
      exit 1
    fi

    secrets::remove_symlink_by_stored_file "$secret_path"
  else
    # Not provided file
    deleted_items=($(secrets::find --exclude files | secrets::fzf "Select file(s) to be deleted"))
    for item in "${deleted_items[@]}"; do
      secrets::remove_symlink_by_stored_file "$item"
    done
  fi
  ;;
"edit")
  if $by_alias; then
    files_to_edit=($(secrets::get_all_aliases | secrets::fzf "Edit secrets aliases by alias"))
  else
    files_to_edit=($(secrets::find --exclude files | secrets::fzf "Edit secrets stored files alias"))
  fi
  
  output::header "Edit stored file aliases"
  for item in "${files_to_edit[@]}"; do
    item_alias=""
    item_old_alias=""
    item_stored_file=""

    if $by_alias; then
      item_alias="$item"
      item_old_alias="$item"
      item_stored_file="$(secrets::get_stored_file_by_alias "$item")"
    else
      item_alias="$(secrets::get_alias_by_stored_file "$item")"
      item_old_alias="$item_alias"
      item_stored_file="$item"
    fi

    output::question_default "Choose a new aliases for '$item'" "$item_alias" "item_alias"

    if [[ -n "$item_alias" ]]; then
      output::answer "Deleting old alias"
      eval rm -f "$item_old_alias"
      output::answer "Appending the new alias to secrets file"
      secrets::append_or_update_value_of_link "$item_alias" "$DOTLY_SECRETS_MODULE_PATH/files/$item_stored_file"
      output::solution "Updated to '$item_alias' new location"
      output::empty_line
    else
      output::error "Blank alias could not be aliased. Nothing to do."
      exit 1
    fi
  done

  if $no_sync; then
    output::write "To apply new alias, needs to execute 'dot secrets apply' manually or"
    output::write "by sync your secrets 'dot secrets sync', which is the recommended"
    output::write "way to apply them."
    output::empty_line
  fi
  ;;
"restore")
  output::header "Restoring file(s) by aliases"
  if [[ -n "$secret_alias" ]]; then
    echo
    echo "Provided alias: $secret_alias"
    secrets::relative_path "$secret_alias"
    echo
    secrets::restore_by_alias "$(secrets::relative_path "$secret_alias")"
    output::solution "File '$2' restored âœ…"
  else
    secrets_aliases=($(secrets::get_all_aliases | secrets::fzf "Select one or more aliases to restore"))
    for item in "${secrets_aliases[@]}"; do
      secrets::restore_by_alias "$item"
      output::solution "File '$item' restored âœ…"
    done
  fi
  exit
  ;;
*)
  if $prompt && [[ -z "${secrets_subfolder:-}" ]]; then
    output::question "Relative path inside secrets files subfolder" "secrets_subfolder"
  fi
  
  if [[ -z "$item_path" ]]; then
    "$DOTLY_PATH/bin/dot" secrets file --help
    exit 1
  fi

  secrets::store_file "$item_path" "${secrets_subfolder:-}"
  ;;
esac

if ! $no_sync; then
  if $yes; then
    "$DOTLY_PATH/bin/dot" secrets sync --yes
  else
    "$DOTLY_PATH/bin/dot" secrets sync
  fi
fi
