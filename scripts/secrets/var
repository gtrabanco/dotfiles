#!/usr/bin/env bash

set -euo pipefail

[[ -z "$DOTLY_PATH" ]] && exit 1

. "$DOTLY_PATH/scripts/core/_main.sh"
. "$DOTLY_PATH/scripts/secrets/lib/secrets_vars_helpers.sh"

##? Set, get and delete variable values
##? 
##?
##? Usage:
##?   var [-h | --help]
##?   var [-v | --version]
##?   var [-d | --delete] [-n | --no-sync] [-y | --yes] <var_name> [<value>...]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?   -d --delete   Delete var_name if exists
##?   -n --no-sync  Do not sync changes. This option ignore --yes because
##?                 sync command won't be executed.
##?   -y --yes      No prompt about if you are sure you want to sync your
##?                 secrets repository.
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
docs::parse "$@"

SCRIPT_NAME="dot secrets var"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

if $delete; then
  secrets::var_delete "$var_name"
  unset "$var_name"
  exit 0
fi


previous_var_value="$(secrets::var "$var_name" | xargs || echo "")"
value="$(echo "${value[*]:-}" | xargs)"

secrets::var "$var_name" "${value:-}" || echo ""

if ! $no_sync && [[ -n "${value:-}" ]] &&\
  [ -n "${previous_var_value:-}" ] &&\
  [ "${previous_var_value:-}" != "${value:-}" ]  
then
  if $yes; then
    "$DOTLY_PATH/bin/dot" secrets sync --yes --no-apply
  else
    "$DOTLY_PATH/bin/dot" secrets sync --no-apply
  fi
fi
