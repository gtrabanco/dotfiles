#!/usr/bin/env bash
##? Share secrets by creating a link from shell
##?
##?
##? Usage:
##?   secret [-h | --help]
##?   secret [-v | --version]
##?   secret [--only-url] [--minutes <int_minutes>] [<data>...]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?   --minutes     Set the expiration time in minutes for the secret_data
##?
##? Arguments:
##?   <data>        The secret data to share, if none, is read from stdin
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
#? v1.0.0

script::depends_on curl jq

SECRETS_API="https://keepsecrets.me/api/v1/secret/"
SECRETS_BASE_URL="https://keepsecrets.me/secret"

generate_link() {
  local reply
  local -r CURL_BIN="$(command -v curl)"
  local -r json="{\"expireAt\": \"${minutes:-5}\",\"secret\":\"${*}\"}"
  local -r curl_args=(
    -s -X POST -H 'Content-Type: application/json' --data-raw "$json"
  )

  local -r reply="$("${CURL_BIN}" "${curl_args[@]}" "${SECRETS_API}")"

  if [[ -z "${reply:-}" ]]; then
    echo "Error: No reply from server" >&2
    exit 1
  fi

  echo "${SECRETS_BASE_URL}/$(echo "$reply" | jq -r '._id' 2> /dev/null)/$(echo "$reply" | jq -r '._secretKey' 2> /dev/null)"
}

if [[ -z "${data:-}" ]]; then
  data="$(< /dev/stdin)"

  if [[ -z "${data:-}" ]]; then
    echo "Error: No data provided" >&2
    exit 1
  fi
fi

minutes="${int_minutes:-5}"
if ! [[ -n "${minutes:-5}" && $minutes == /^[0-9]+/ ]]; then
  minutes=5
  [[ -n "$int_minutes" ]] && data="${int_minutes} ${data}"
fi

url="$(generate_link "${data}")"

if ${only_url:-false}; then
  echo "${url}"
  exit
fi

if [[ -z "${url:-}" ]]; then
  echo "Error: No url generated" >&2
  exit 1
fi

HOUR_MINUTES=60
DAY_MINUTES=1440
WEEK_MINUTES=10080

total_weeks=0
total_days=0
total_hours=0
MESSAGE=()

if [[ $minutes -ge $WEEK_MINUTES ]]; then
  total_weeks=$((minutes / WEEK_MINUTES))
  minutes=$((minutes % WEEK_MINUTES))
  MESSAGE+=("${total_weeks} week(s)")
fi

if [[ $minutes -ge $DAY_MINUTES ]]; then
  total_days=$((minutes / DAY_MINUTES))
  minutes=$((minutes % DAY_MINUTES))
  MESSAGE+=("${total_days} day(s)")
fi

if [[ $minutes -ge $HOUR_MINUTES ]]; then
  total_hours=$((minutes / HOUR_MINUTES))
  minutes=$((minutes % HOUR_MINUTES))
  MESSAGE+=("${total_hours} hour(s)")
fi

if [[ $minutes -gt 0 ]]; then
  MESSAGE+=("${minutes} minute(s)")
fi

output::write "$url"

if command -v pbcopy &> /dev/null && echo "$url" | pbcopy; then
  output::answer "\`The link is in your clipboard\`"
fi

output::empty_line
IFS=', '
output::write "The url will expire in:"
output::write "  ${MESSAGE[*]}"
